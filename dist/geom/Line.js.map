{"version":3,"file":"Line.js","sourceRoot":"","sources":["../../src/geom/Line.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,MAAM,OAAO,IAAI;IAChB,CAAC,CAAM;IACP,CAAC,CAAM;IAEP,YAAY,CAAM,EAAE,CAAM;QACzB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM;QACL,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,IAAI;QACH,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ;QACP,OAAO,QAAQ,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC7D,CAAC;IAED,aAAa,CAAC,IAAU;QACvB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC,CAAC,qBAAqB;QACnC,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAClE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1C,OAAO,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;QACD,OAAO,IAAI,CAAC,CAAC,2CAA2C;IACzD,CAAC;IAED,eAAe,CAAC,MAAc;QAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QACpD,MAAM,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,YAAY,GAAG,CAAC,EAAE,CAAC;YACtB,OAAO,EAAE,CAAC,CAAC,kBAAkB;QAC9B,CAAC;QACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;YACxB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;YACxB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;QACD,OAAO,aAAa,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,eAAe,CACrB,KAAa,EACb,MAAc,EACd,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QAEtB,IAAI,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC;CACD","sourcesContent":["import { Vec } from './Vec';\r\nimport { Circle } from './Circle';\r\n\r\nexport class Line {\r\n\ta: Vec;\r\n\tb: Vec;\r\n\r\n\tconstructor(a: Vec, b: Vec) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t}\r\n\r\n\tgetHeading() {\r\n\t\treturn this.b.sub(this.a);\r\n\t}\r\n\r\n\tgetDir() {\r\n\t\treturn this.getHeading().normalize();\r\n\t}\r\n\r\n\tgetLength() {\r\n\t\treturn this.getHeading().mag();\r\n\t}\r\n\r\n\tgetMidpoint() {\r\n\t\treturn this.a.lerp(this.b, 0.5);\r\n\t}\r\n\r\n\tcopy() {\r\n\t\treturn new Line(this.a.copy(), this.b.copy());\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `Line(${this.a.toString()} -> ${this.b.toString()})`;\r\n\t}\r\n\r\n\tintersectLine(line: Line) {\r\n\t\tconst x1 = this.a.x;\r\n\t\tconst y1 = this.a.y;\r\n\t\tconst x2 = this.b.x;\r\n\t\tconst y2 = this.b.y;\r\n\t\tconst x3 = line.a.x;\r\n\t\tconst y3 = line.a.y;\r\n\t\tconst x4 = line.b.x;\r\n\t\tconst y4 = line.b.y;\r\n\t\tconst denom = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\t\tif (denom === 0) {\r\n\t\t\treturn null; // Lines are parallel\r\n\t\t}\r\n\t\tconst t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / denom;\r\n\t\tconst u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / denom;\r\n\t\tif (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\r\n\t\t\treturn new Vec(x1 + t * (x2 - x1), y1 + t * (y2 - y1));\r\n\t\t}\r\n\t\treturn null; // No intersection within the line segments\r\n\t}\r\n\r\n\tintersectCircle(circle: Circle): Vec[] {\r\n\t\tconst d = this.getHeading();\r\n\t\tconst f = this.a.sub(circle);\r\n\t\tconst a = d.magSq();\r\n\t\tconst b = 2 * f.dot(d);\r\n\t\tconst c = f.magSq() - circle.radius * circle.radius;\r\n\t\tconst discriminant = b * b - 4 * a * c;\r\n\t\tif (discriminant < 0) {\r\n\t\t\treturn []; // No intersection\r\n\t\t}\r\n\t\tconst sqrtDiscriminant = Math.sqrt(discriminant);\r\n\t\tconst t1 = (-b - sqrtDiscriminant) / (2 * a);\r\n\t\tconst t2 = (-b + sqrtDiscriminant) / (2 * a);\r\n\t\tconst intersections = [];\r\n\t\tif (t1 >= 0 && t1 <= 1) {\r\n\t\t\tintersections.push(this.a.add(d.scale(t1)));\r\n\t\t}\r\n\t\tif (t2 >= 0 && t2 <= 1) {\r\n\t\t\tintersections.push(this.a.add(d.scale(t2)));\r\n\t\t}\r\n\t\treturn intersections;\r\n\t}\r\n\r\n\tstatic fromAngleLength(\r\n\t\tangle: number,\r\n\t\tlength: number,\r\n\t\torigin = new Vec(0, 0)\r\n\t): Line {\r\n\t\tlet dir = Vec.fromAngle(angle).scale(length);\r\n\t\tlet a = origin.copy();\r\n\t\tlet b = origin.add(dir);\r\n\t\treturn new Line(a, b);\r\n\t}\r\n}\r\n"]}