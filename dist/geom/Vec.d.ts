export declare class Vec {
    x: number;
    y: number;
    constructor(x: Vec | number, y?: number);
    set(x: Vec | number, y?: number): Vec;
    add(v: Vec): Vec;
    addSelf(v: Vec): Vec;
    sub(v: Vec): Vec;
    subSelf(v: Vec): Vec;
    scale(s: number): Vec;
    scaleSelf(s: number): Vec;
    div(s: number): Vec;
    divSelf(s: number): Vec;
    dot(v: Vec): number;
    magSq(): number;
    mag(): number;
    normalize(): Vec;
    normalizeSelf(): Vec;
    normalizeTo(len: number): Vec;
    normalizeToSelf(len: number): Vec;
    distanceToSq(v: Vec): number;
    distanceTo(v: Vec): number;
    perp(): Vec;
    perpSelf(): Vec;
    rotate(theta: number): Vec;
    rotateSelf(theta: number): Vec;
    lerp(v: Vec, t: number): Vec;
    lerpSelf(v: Vec, t: number): Vec;
    angleTo(v: Vec): number;
    angle(): number;
    copy(): Vec;
    toString(): string;
    projectOnto(v: Vec): Vec;
    projectOntoSelf(v: Vec): Vec;
    static epsilon: number;
    static random2D(): Vec;
    static fromAngle(angle: number): Vec;
    static get ZERO(): Vec;
    static get X(): Vec;
    static get Y(): Vec;
    static angleBetween(a: Vec, b: Vec): number;
    static angleFromTo(a: Vec, b: Vec): number;
}
//# sourceMappingURL=Vec.d.ts.map