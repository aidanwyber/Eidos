{"version":3,"sources":["../src/physics/behaviors/AttractBehavior.ts","../src/geom/Vec.ts","../src/physics/behaviors/BounceBehavior.ts","../src/physics/behaviors/ConstantForceBehavior.ts","../src/physics/behaviors/DragBehavior.ts","../src/physics/behaviors/FrictionBehavior.ts","../src/physics/behaviors/GravitationBehavior.ts","../src/physics/behaviors/GravityBehavior.ts","../src/physics/behaviors/JitterBehavior.ts","../src/physics/Particle.ts","../src/physics/ParticleEmitter.ts","../src/physics/ParticleSink.ts","../src/geom/Line.ts","../src/geom/Circle.ts","../src/geom/Rect.ts","../src/physics/PhysicsEngine.ts","../src/physics/Spring.ts","../src/physics/SpringChain.ts","../src/gfx/GFX.ts"],"names":["AttractBehavior","target","strength","radius","minDistance","p","dir","distSq","limitedDistSq","forceMagnitude","force","_Vec","x","y","v","s","m","len","theta","cos","sin","dp","magSq","scalar","angle","a","b","dot","mags","amt","Vec","BounceBehavior","bounds","restitution","left","right","top","bottom","velocity","bounced","ConstantForceBehavior","DragBehavior","coefficient","speedSq","dragMagnitude","drag","FrictionBehavior","staticCoefficient","kineticCoefficient","speed","friction","GravitationBehavior","gravitationalConstant","particles","other","GravityBehavior","acc","JitterBehavior","maxDistance","magnitude","jitter","Particle","pos","mass","isLocked","deltaVel","vel","gamma","spring","ParticleEmitter","position","rate","factory","engine","deltaTime","particle","ParticleSink","remaining","Line","_Line","line","x1","y1","x2","y2","x3","y3","x4","y4","denom","t","u","circle","d","f","c","discriminant","sqrtDiscriminant","t1","t2","intersections","length","origin","Circle","center","pt","Rect","_Rect","arg1","arg2","arg3","arg4","dx","dy","PhysicsEngine","width","height","e","rrSq","pHeld","i","_Spring","restLength","k","diff","Spring","SpringChain","physics","firstParticle","segmentCount","segmentLength","segmentVector","lastParticle","pi","pn","GFX","sketch","size","weight","showRestLength","mid","springs","vec","scale","arrowSize","end","from","to","vertices","points","tension","p0","p1","p2","p3","spacing","offsetX","offsetY","str","align"],"mappings":"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","file":"index.js","sourcesContent":["import type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\nconst DEFAULT_MIN_DISTANCE = 1;\r\n\r\n/**\r\n * Attracts a particle toward a target particle with an inverse-square falloff.\r\n */\r\nexport class AttractBehavior implements Behavior {\r\n        private readonly target: Particle;\r\n        private readonly strength: number;\r\n        private readonly radiusSq: number;\r\n        private readonly minDistanceSq: number;\r\n\r\n        constructor(target: Particle, strength: number, radius?: number, minDistance = DEFAULT_MIN_DISTANCE) {\r\n                this.target = target;\r\n                this.strength = strength;\r\n                this.radiusSq = radius !== undefined ? radius * radius : Number.POSITIVE_INFINITY;\r\n                this.minDistanceSq = Math.max(minDistance * minDistance, DEFAULT_MIN_DISTANCE * DEFAULT_MIN_DISTANCE);\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n                if (p === this.target) return;\r\n\r\n                const dir = this.target.sub(p);\r\n                const distSq = dir.magSq();\r\n                if (distSq === 0) return;\r\n\r\n                if (distSq > this.radiusSq) return;\r\n\r\n                const limitedDistSq = Math.max(distSq, this.minDistanceSq);\r\n                const forceMagnitude = this.strength / limitedDistSq;\r\n                const force = dir.normalizeTo(forceMagnitude);\r\n                p.addForce(force);\r\n        }\r\n}\r\n","export class Vec {\r\n\tx: number = 0;\r\n\ty: number = 0;\r\n\r\n\tconstructor(x: Vec | number, y?: number) {\r\n\t\tif (x instanceof Vec) {\r\n\t\t\tthis.x = x.x;\r\n\t\t\tthis.y = x.y;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (y === undefined) return;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tset(x: Vec | number, y?: number): Vec {\r\n\t\tif (x instanceof Vec) {\r\n\t\t\tthis.x = x.x;\r\n\t\t\tthis.y = x.y;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (y === undefined) return this;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd(v: Vec): Vec {\r\n\t\treturn new Vec(this.x + v.x, this.y + v.y);\r\n\t}\r\n\taddSelf(v: Vec): Vec {\r\n\t\tthis.set(this.add(v));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsub(v: Vec): Vec {\r\n\t\treturn new Vec(this.x - v.x, this.y - v.y);\r\n\t}\r\n\tsubSelf(v: Vec): Vec {\r\n\t\tthis.set(this.sub(v));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tscale(s: number): Vec {\r\n\t\treturn new Vec(this.x * s, this.y * s);\r\n\t}\r\n\tscaleSelf(s: number): Vec {\r\n\t\tthis.set(this.scale(s));\r\n\t\treturn this;\r\n\t}\r\n\tdiv(s: number): Vec {\r\n\t\treturn new Vec(this.x / s, this.y / s);\r\n\t}\r\n\tdivSelf(s: number): Vec {\r\n\t\tthis.set(this.div(s));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdot(v: Vec): number {\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\t}\r\n\r\n\tmagSq(): number {\r\n\t\treturn this.dot(this);\r\n\t}\r\n\tmag(): number {\r\n\t\treturn Math.sqrt(this.magSq());\r\n\t}\r\n\r\n\tnormalize(): Vec {\r\n\t\tlet m = this.mag();\r\n\t\tif (m > Vec.epsilon) {\r\n\t\t\treturn this.scale(1 / m);\r\n\t\t}\r\n\t\treturn new Vec(0, 0);\r\n\t}\r\n\tnormalizeSelf(): Vec {\r\n\t\tthis.set(this.normalize());\r\n\t\treturn this;\r\n\t}\r\n\r\n\tnormalizeTo(len: number): Vec {\r\n\t\treturn this.normalize().scale(len);\r\n\t}\r\n\tnormalizeToSelf(len: number): Vec {\r\n\t\tthis.set(this.normalizeTo(len));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdistanceToSq(v: Vec) {\r\n\t\treturn this.sub(v).magSq();\r\n\t}\r\n\tdistanceTo(v: Vec) {\r\n\t\treturn this.sub(v).mag();\r\n\t}\r\n\r\n\tperp(): Vec {\r\n\t\treturn new Vec(-this.y, this.x);\r\n\t}\r\n\tperpSelf(): Vec {\r\n\t\tthis.set(this.perp());\r\n\t\treturn this;\r\n\t}\r\n\r\n\trotate(theta: number): Vec {\r\n\t\tlet cos = Math.cos(theta);\r\n\t\tlet sin = Math.sin(theta);\r\n\t\treturn new Vec(\r\n\t\t\tthis.x * cos - this.y * sin,\r\n\t\t\tthis.x * sin + this.y * cos\r\n\t\t);\r\n\t}\r\n\trotateSelf(theta: number): Vec {\r\n\t\tthis.set(this.rotate(theta));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlerp(v: Vec, t: number): Vec {\r\n\t\treturn this.scale(1 - t).add(v.scale(t));\r\n\t}\r\n\tlerpSelf(v: Vec, t: number): Vec {\r\n\t\tthis.set(this.lerp(v, t));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tangleTo(v: Vec): number {\r\n\t\treturn Vec.angleBetween(this, v);\r\n\t}\r\n\r\n\tangle(): number {\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\r\n\tcopy(): Vec {\r\n\t\treturn new Vec(this.x, this.y);\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn `(${this.x}, ${this.y})`;\r\n\t}\r\n\r\n\tprojectOnto(v: Vec): Vec {\r\n\t\tlet dp = this.dot(v);\r\n\t\tlet magSq = v.magSq();\r\n\t\tif (magSq === 0) return new Vec(0, 0);\r\n\t\tlet scalar = dp / magSq;\r\n\t\treturn v.scale(scalar);\r\n\t}\r\n\tprojectOntoSelf(v: Vec): Vec {\r\n\t\tthis.set(this.projectOnto(v));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tstatic epsilon = 1e-4;\r\n\r\n\tstatic random2D(): Vec {\r\n\t\tlet angle = Math.random() * Math.PI * 2;\r\n\t\treturn new Vec(Math.cos(angle), Math.sin(angle));\r\n\t}\r\n\r\n\tstatic fromAngle(angle: number): Vec {\r\n\t\treturn new Vec(Math.cos(angle), Math.sin(angle));\r\n\t}\r\n\r\n\tstatic get ZERO(): Vec {\r\n\t\treturn new Vec(0, 0);\r\n\t}\r\n\r\n\tstatic get X(): Vec {\r\n\t\treturn new Vec(1, 0);\r\n\t}\r\n\r\n\tstatic get Y(): Vec {\r\n\t\treturn new Vec(0, 1);\r\n\t}\r\n\r\n\tstatic angleBetween(a: Vec, b: Vec): number {\r\n\t\tlet dot = a.dot(b);\r\n\t\tlet mags = a.mag() * b.mag();\r\n\t\tif (mags === 0) return 0;\r\n\t\tlet amt = dot / mags;\r\n\t\tif (amt <= -1) return Math.PI;\r\n\t\tif (amt >= 1) return 0;\r\n\t\treturn Math.acos(amt);\r\n\t}\r\n\r\n\tstatic angleFromTo(a: Vec, b: Vec): number {\r\n\t\treturn Math.atan2(b.y - a.y, b.x - a.x);\r\n\t}\r\n}\r\n","import { Vec } from '../../geom/Vec';\r\nimport type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\nexport interface BounceRect {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n}\r\n\r\n/**\r\n * Keeps particles within a rectangular region, reflecting their velocity when they hit the bounds.\r\n */\r\nexport class BounceBehavior implements Behavior {\r\n        private readonly bounds: BounceRect;\r\n        private readonly restitution: number;\r\n\r\n        constructor(bounds: BounceRect, restitution = 1) {\r\n                this.bounds = { ...bounds };\r\n                this.restitution = restitution;\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n\r\n                const left = this.bounds.x + p.radius;\r\n                const right = this.bounds.x + this.bounds.width - p.radius;\r\n                const top = this.bounds.y + p.radius;\r\n                const bottom = this.bounds.y + this.bounds.height - p.radius;\r\n\r\n                let velocity = p.getVelocity();\r\n                let bounced = false;\r\n\r\n                if (p.x < left) {\r\n                        p.x = left;\r\n                        velocity = new Vec(-velocity.x * this.restitution, velocity.y);\r\n                        bounced = true;\r\n                } else if (p.x > right) {\r\n                        p.x = right;\r\n                        velocity = new Vec(-velocity.x * this.restitution, velocity.y);\r\n                        bounced = true;\r\n                }\r\n\r\n                if (p.y < top) {\r\n                        p.y = top;\r\n                        velocity = new Vec(velocity.x, -velocity.y * this.restitution);\r\n                        bounced = true;\r\n                } else if (p.y > bottom) {\r\n                        p.y = bottom;\r\n                        velocity = new Vec(velocity.x, -velocity.y * this.restitution);\r\n                        bounced = true;\r\n                }\r\n\r\n                if (bounced) {\r\n                        p.setVelocity(velocity);\r\n                }\r\n        }\r\n}\r\n","import { Vec } from '../../geom/Vec';\r\nimport type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\n/**\r\n * Applies a constant force (or acceleration) to the particle each update.\r\n */\r\nexport class ConstantForceBehavior implements Behavior {\r\n        private readonly force: Vec;\r\n\r\n        constructor(force: Vec) {\r\n                this.force = new Vec(force);\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n                p.addForce(this.force);\r\n        }\r\n}\r\n","import type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\n/**\r\n * Applies a quadratic drag force opposite to the particle's velocity.\r\n */\r\nexport class DragBehavior implements Behavior {\r\n        private readonly coefficient: number;\r\n\r\n        constructor(coefficient: number) {\r\n                this.coefficient = coefficient;\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n\r\n                const velocity = p.getVelocity();\r\n                const speedSq = velocity.magSq();\r\n                if (speedSq === 0) return;\r\n\r\n                const dragMagnitude = this.coefficient * speedSq;\r\n                const drag = velocity.normalizeTo(-dragMagnitude);\r\n                p.addForce(drag);\r\n        }\r\n}\r\n","import type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\n/**\r\n * Applies static and kinetic friction to reduce particle velocity.\r\n */\r\nexport class FrictionBehavior implements Behavior {\r\n        private readonly staticCoefficient: number;\r\n        private readonly kineticCoefficient: number;\r\n\r\n        constructor(staticCoefficient: number, kineticCoefficient: number) {\r\n                this.staticCoefficient = staticCoefficient;\r\n                this.kineticCoefficient = kineticCoefficient;\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n\r\n                const velocity = p.getVelocity();\r\n                const speed = velocity.mag();\r\n                if (speed === 0) return;\r\n\r\n                if (speed < this.staticCoefficient) {\r\n                        p.clearVelocity();\r\n                        return;\r\n                }\r\n\r\n                const friction = velocity.normalizeTo(-this.kineticCoefficient);\r\n                p.addForce(friction);\r\n        }\r\n}\r\n","import type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\nconst EPSILON = 1e-6;\r\n\r\n/**\r\n * Applies pairwise Newtonian gravitation between the subject particle and a collection of other particles.\r\n */\r\nexport class GravitationBehavior implements Behavior {\r\n        private readonly gravitationalConstant: number;\r\n        private readonly particles: () => Iterable<Particle>;\r\n\r\n        constructor(gravitationalConstant: number, particles: Iterable<Particle> | (() => Iterable<Particle>)) {\r\n                this.gravitationalConstant = gravitationalConstant;\r\n                this.particles = typeof particles === 'function' ? particles : () => particles;\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n\r\n                for (const other of this.particles()) {\r\n                        if (other === p) continue;\r\n\r\n                        const dir = other.sub(p);\r\n                        const distSq = Math.max(dir.magSq(), EPSILON);\r\n                        const forceMagnitude =\r\n                                (this.gravitationalConstant * p.mass * other.mass) / distSq;\r\n                        const force = dir.normalizeTo(forceMagnitude);\r\n                        p.addForce(force);\r\n                }\r\n        }\r\n}\r\n","import type { Vec } from '../../geom/Vec';\r\nimport type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\nexport class GravityBehavior implements Behavior {\r\n\tacc: Vec;\r\n\r\n\tconstructor(acc: Vec) {\r\n\t\tthis.acc = acc;\r\n\t}\r\n\r\n\tapplyBehavior(p: Particle) {\r\n\t\tp.addForce(this.acc.div(p.mass));\r\n\t}\r\n}\r\n","import { Vec } from '../../geom/Vec';\r\nimport type { Particle } from '../Particle';\r\nimport type { Behavior } from './Behavior';\r\n\r\n/**\r\n * Applies a small random force to produce jittering motion.\r\n */\r\nexport class JitterBehavior implements Behavior {\r\n        private readonly maxDistance: number;\r\n\r\n        constructor(maxDistance: number) {\r\n                this.maxDistance = maxDistance;\r\n        }\r\n\r\n        applyBehavior(p: Particle): void {\r\n                if (p.isLocked) return;\r\n\r\n                const magnitude = Math.random() * this.maxDistance;\r\n                const jitter = Vec.random2D().normalizeTo(magnitude);\r\n                p.addForce(jitter);\r\n        }\r\n}\r\n","import { Vec } from '../geom/Vec';\r\nimport { Spring } from './Spring';\r\n\r\nexport class Particle extends Vec {\r\n\tprev: Vec;\r\n\ttemp: Vec;\r\n\tforce: Vec;\r\n\r\n\tmass: number;\r\n\tradius: number = 10;\r\n\r\n\tisLocked: boolean;\r\n\r\n\thasLifespan = false;\r\n\tlifespan: number = 255;\r\n\r\n\thasTrail: boolean = false;\r\n\ttrail = [];\r\n\ttrailLength: number = 10;\r\n\r\n\tsprings: Spring[] = [];\r\n\r\n\t// behaviors;\r\n\r\n\tconstructor(pos: Vec, mass = 1, isLocked = false) {\r\n\t\tsuper(pos);\r\n\t\tthis.prev = this.copy();\r\n\t\tthis.temp = new Vec(0, 0);\r\n\t\tthis.force = new Vec(0, 0);\r\n\r\n\t\tthis.mass = mass;\r\n\t\tthis.isLocked = isLocked;\r\n\r\n\t\t// this.x += (Math.random() * 2 - 1) * 1e-3;\r\n\t\t// this.y += (Math.random() * 2 - 1) * 1e-3;\r\n\t}\r\n\r\n\taddForce(v: Vec) {\r\n\t\tthis.force.addSelf(v);\r\n\t}\r\n\r\n\tclearForce() {\r\n\t\tthis.force.set(0, 0);\r\n\t}\r\n\r\n\t// applyBehaviors() {\r\n\t// \tfor (let behavior of this.behaviors) {\r\n\t// \t\tbehavior.applyBehavior(this);\r\n\t// \t}\r\n\t// }\r\n\r\n\taddVelocity(deltaVel: Vec) {\r\n\t\tthis.prev.subSelf(deltaVel);\r\n\t}\r\n\r\n\tclearVelocity() {\r\n\t\tthis.prev.set(this);\r\n\t}\r\n\r\n\tgetVelocity() {\r\n\t\treturn this.sub(this.prev);\r\n\t}\r\n\r\n\tsetVelocity(vel: Vec) {\r\n\t\tthis.addVelocity(this.getVelocity().scale(-1).add(vel));\r\n\t}\r\n\r\n\tdampen(gamma: number) {\r\n\t\tthis.addVelocity(this.getVelocity().scale(1 - gamma));\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tif (this.isLocked) return;\r\n\r\n\t\t// this.applyBehaviors();\r\n\r\n\t\tthis.temp.set(this);\r\n\t\tthis.addSelf(this.sub(this.prev).addSelf(this.force.scale(this.mass)));\r\n\t\tthis.prev.set(this.temp);\r\n\t\tthis.clearForce();\r\n\t}\r\n\r\n\t// draw() {\r\n\t// \tfill(0, this.lifespan);\r\n\t// \tnoStroke();\r\n\t// \tcircle(this.x, this.y, this.radius * 2);\r\n\r\n\t// \tif (this.isHovered()) {\r\n\t// \t\tconsole.log('hovered!');\r\n\t// \t\tstroke(0, this.lifespan);\r\n\t// \t\tnoFill();\r\n\t// \t\tcircle(this.x, this.y, this.radius * 4);\r\n\t// \t}\r\n\r\n\t// \tif (this.hasTrail) {\r\n\t// \t\tnoFill();\r\n\t// \t\tstroke(255, this.lifespan);\r\n\t// \t\tbeginShape();\r\n\t// \t\tfor (let p of this.trail) {\r\n\t// \t\t\tvertex(p.x, p.y);\r\n\t// \t\t}\r\n\t// \t\tendShape();\r\n\t// \t}\r\n\t// }\r\n\r\n\taddSpring(spring: Spring) {\r\n\t\tthis.springs.push(spring);\r\n\t}\r\n\r\n\t// isHovered(): boolean {\r\n\t// \treturn (\r\n\t// \t\tthis.distanceToSq(new Vec(mouseX, mouseY)) <\r\n\t// \t\tthis.radius * this.radius\r\n\t// \t);\r\n\t// }\r\n}\r\n","import { Vec } from '../geom/Vec';\r\nimport { Particle } from './Particle';\r\nimport type { PhysicsEngine } from './PhysicsEngine';\r\n\r\nexport type ParticleFactory = (position: Vec) => Particle;\r\n\r\n/**\r\n * Utility for emitting new particles at a configurable rate.\r\n */\r\nexport class ParticleEmitter {\r\n        position: Vec;\r\n        rate: number;\r\n        private readonly factory: ParticleFactory;\r\n        private accumulator = 0;\r\n        isEmitting = true;\r\n\r\n        constructor(position: Vec, rate: number, factory: ParticleFactory) {\r\n                this.position = new Vec(position);\r\n                this.rate = rate;\r\n                this.factory = factory;\r\n        }\r\n\r\n        setPosition(position: Vec): void {\r\n                this.position.set(position);\r\n        }\r\n\r\n        setRate(rate: number): void {\r\n                this.rate = rate;\r\n        }\r\n\r\n        emit(): Particle {\r\n                return this.factory(new Vec(this.position));\r\n        }\r\n\r\n        /**\r\n         * Update the emitter and emit particles into the physics engine.\r\n         * @param engine Target engine that receives new particles.\r\n         * @param deltaTime Time step multiplier (1 = one frame).\r\n         */\r\n        update(engine: PhysicsEngine, deltaTime = 1): void {\r\n                if (!this.isEmitting) return;\r\n                this.accumulator += this.rate * deltaTime;\r\n                while (this.accumulator >= 1) {\r\n                        const particle = this.emit();\r\n                        engine.addParticle(particle);\r\n                        this.accumulator -= 1;\r\n                }\r\n        }\r\n}\r\n","import { Vec } from '../geom/Vec';\r\nimport type { Particle } from './Particle';\r\nimport type { PhysicsEngine } from './PhysicsEngine';\r\n\r\n/**\r\n * Removes particles that enter a given radius around the sink position.\r\n */\r\nexport class ParticleSink {\r\n        position: Vec;\r\n        radius: number;\r\n\r\n        constructor(position: Vec, radius: number) {\r\n                this.position = new Vec(position);\r\n                this.radius = radius;\r\n        }\r\n\r\n        setPosition(position: Vec): void {\r\n                this.position.set(position);\r\n        }\r\n\r\n        setRadius(radius: number): void {\r\n                this.radius = radius;\r\n        }\r\n\r\n        contains(p: Particle): boolean {\r\n                return p.distanceToSq(this.position) <= this.radius * this.radius;\r\n        }\r\n\r\n        absorb(engine: PhysicsEngine): void {\r\n                const remaining: Particle[] = [];\r\n                for (const particle of engine.particles) {\r\n                        if (!this.contains(particle)) {\r\n                                remaining.push(particle);\r\n                        }\r\n                }\r\n                engine.particles = remaining;\r\n        }\r\n}\r\n","import { Vec } from './Vec';\r\nimport { Circle } from './Circle';\r\n\r\nexport class Line {\r\n\ta: Vec;\r\n\tb: Vec;\r\n\r\n\tconstructor(a: Vec, b: Vec) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t}\r\n\r\n\tgetHeading() {\r\n\t\treturn this.b.sub(this.a);\r\n\t}\r\n\r\n\tgetDir() {\r\n\t\treturn this.getHeading().normalize();\r\n\t}\r\n\r\n\tgetLength() {\r\n\t\treturn this.getHeading().mag();\r\n\t}\r\n\r\n\tgetMidpoint() {\r\n\t\treturn this.a.lerp(this.b, 0.5);\r\n\t}\r\n\r\n\tcopy() {\r\n\t\treturn new Line(this.a.copy(), this.b.copy());\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `Line(${this.a.toString()} -> ${this.b.toString()})`;\r\n\t}\r\n\r\n\tintersectLine(line: Line) {\r\n\t\tconst x1 = this.a.x;\r\n\t\tconst y1 = this.a.y;\r\n\t\tconst x2 = this.b.x;\r\n\t\tconst y2 = this.b.y;\r\n\t\tconst x3 = line.a.x;\r\n\t\tconst y3 = line.a.y;\r\n\t\tconst x4 = line.b.x;\r\n\t\tconst y4 = line.b.y;\r\n\t\tconst denom = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\t\tif (denom === 0) {\r\n\t\t\treturn null; // Lines are parallel\r\n\t\t}\r\n\t\tconst t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / denom;\r\n\t\tconst u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / denom;\r\n\t\tif (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\r\n\t\t\treturn new Vec(x1 + t * (x2 - x1), y1 + t * (y2 - y1));\r\n\t\t}\r\n\t\treturn null; // No intersection within the line segments\r\n\t}\r\n\r\n\tintersectCircle(circle: Circle): Vec[] {\r\n\t\tconst d = this.getHeading();\r\n\t\tconst f = this.a.sub(circle);\r\n\t\tconst a = d.magSq();\r\n\t\tconst b = 2 * f.dot(d);\r\n\t\tconst c = f.magSq() - circle.radius * circle.radius;\r\n\t\tconst discriminant = b * b - 4 * a * c;\r\n\t\tif (discriminant < 0) {\r\n\t\t\treturn []; // No intersection\r\n\t\t}\r\n\t\tconst sqrtDiscriminant = Math.sqrt(discriminant);\r\n\t\tconst t1 = (-b - sqrtDiscriminant) / (2 * a);\r\n\t\tconst t2 = (-b + sqrtDiscriminant) / (2 * a);\r\n\t\tconst intersections = [];\r\n\t\tif (t1 >= 0 && t1 <= 1) {\r\n\t\t\tintersections.push(this.a.add(d.scale(t1)));\r\n\t\t}\r\n\t\tif (t2 >= 0 && t2 <= 1) {\r\n\t\t\tintersections.push(this.a.add(d.scale(t2)));\r\n\t\t}\r\n\t\treturn intersections;\r\n\t}\r\n\r\n\tstatic fromAngleLength(\r\n\t\tangle: number,\r\n\t\tlength: number,\r\n\t\torigin = new Vec(0, 0)\r\n\t): Line {\r\n\t\tlet dir = Vec.fromAngle(angle).scale(length);\r\n\t\tlet a = origin.copy();\r\n\t\tlet b = origin.add(dir);\r\n\t\treturn new Line(a, b);\r\n\t}\r\n}\r\n","import { Vec } from './Vec';\r\n\r\nexport class Circle extends Vec {\r\n\tradius: number;\r\n\r\n\tconstructor(center: Vec, radius: number) {\r\n\t\tsuper(center);\r\n\t\tthis.radius = radius;\r\n\t}\r\n\r\n\tdistanceToPoint(pt: Vec) {\r\n\t\treturn this.distanceTo(pt) - this.radius;\r\n\t}\r\n\r\n\tdistanceToCircle(c: Circle): number {\r\n\t\treturn this.distanceTo(c) - this.radius - c.radius;\r\n\t}\r\n}\r\n","import { Vec } from './Vec';\r\n\r\nexport class Rect {\r\n\tpublic a: Vec; // top-left\r\n\tpublic b: Vec; // bottom-right\r\n\r\n\tconstructor(x: number, y: number, width: number, height: number);\r\n\tconstructor(a: Vec, b: Vec);\r\n\tconstructor(\r\n\t\targ1: number | Vec,\r\n\t\targ2: number | Vec,\r\n\t\targ3?: number,\r\n\t\targ4?: number\r\n\t) {\r\n\t\tif (arg1 instanceof Vec && arg2 instanceof Vec) {\r\n\t\t\tthis.a = arg1;\r\n\t\t\tthis.b = arg2;\r\n\t\t} else if (\r\n\t\t\ttypeof arg1 === 'number' &&\r\n\t\t\ttypeof arg2 === 'number' &&\r\n\t\t\ttypeof arg3 === 'number' &&\r\n\t\t\ttypeof arg4 === 'number'\r\n\t\t) {\r\n\t\t\tthis.a = new Vec(arg1, arg2);\r\n\t\t\tthis.b = new Vec(arg1 + arg3, arg2 + arg4);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid constructor arguments for Rect');\r\n\t\t}\r\n\t}\r\n\r\n\tget x(): number {\r\n\t\treturn this.a.x;\r\n\t}\r\n\r\n\tget y(): number {\r\n\t\treturn this.a.y;\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this.b.x - this.a.x;\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this.b.y - this.a.y;\r\n\t}\r\n\r\n\tget area(): number {\r\n\t\treturn this.width * this.height;\r\n\t}\r\n\r\n\tcontainsPoint(p: Vec): boolean {\r\n\t\treturn (\r\n\t\t\tp.x >= this.a.x &&\r\n\t\t\tp.x <= this.b.x &&\r\n\t\t\tp.y >= this.a.y &&\r\n\t\t\tp.y <= this.b.y\r\n\t\t);\r\n\t}\r\n\r\n\tgetCenter(): Vec {\r\n\t\treturn this.a.lerp(this.b, 0.5);\r\n\t}\r\n\r\n\tcopy(): Rect {\r\n\t\treturn new Rect(this.x, this.y, this.width, this.height);\r\n\t}\r\n\r\n\ttranslate(dx: number, dy: number): Rect {\r\n\t\treturn new Rect(this.x + dx, this.y + dy, this.width, this.height);\r\n\t}\r\n\r\n\tintersects(other: Rect): boolean {\r\n\t\treturn !(\r\n\t\t\tother.b.x < this.a.x ||\r\n\t\t\tother.a.x > this.b.x ||\r\n\t\t\tother.b.y < this.a.y ||\r\n\t\t\tother.a.y > this.b.y\r\n\t\t);\r\n\t}\r\n\r\n\tunion(other: Rect): Rect {\r\n\t\tconst x1 = Math.min(this.a.x, other.a.x);\r\n\t\tconst y1 = Math.min(this.a.y, other.a.y);\r\n\t\tconst x2 = Math.max(this.b.x, other.b.x);\r\n\t\tconst y2 = Math.max(this.b.y, other.b.y);\r\n\t\treturn new Rect(new Vec(x1, y1), new Vec(x2, y2));\r\n\t}\r\n\r\n\tintersection(other: Rect): Rect | null {\r\n\t\tconst x1 = Math.max(this.a.x, other.a.x);\r\n\t\tconst y1 = Math.max(this.a.y, other.a.y);\r\n\t\tconst x2 = Math.min(this.b.x, other.b.x);\r\n\t\tconst y2 = Math.min(this.b.y, other.b.y);\r\n\r\n\t\tif (x2 >= x1 && y2 >= y1) {\r\n\t\t\treturn new Rect(new Vec(x1, y1), new Vec(x2, y2));\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n","import { Vec } from '../geom/index';\r\nimport { Particle, Spring, SpringChain } from './index';\r\n\r\nexport class PhysicsEngine {\r\n\tparticles: Particle[] = [];\r\n\r\n\thasGravity = false;\r\n\tgravity = new Vec(0, 0.1);\r\n\r\n\thasWind = false;\r\n\twind = new Vec(0.1, 0);\r\n\r\n\thasFriction = false;\r\n\tfrictionCoefficient = 0.1;\r\n\r\n\thasDrag = false;\r\n\tdragCoefficient = 0.0;\r\n\r\n\thasBounce = false;\r\n\tbounceCoefficient = 0.8;\r\n\r\n\thasRepulsion = false;\r\n\trepulsionStrength = 10;\r\n\trepulsionRadius = 10;\r\n\r\n\thasDamping = true;\r\n\tdamping = 0.01;\r\n\r\n\thasMouseInteraction = true;\r\n\theldParticleIndex: number | null = null;\r\n\r\n\titers = 50;\r\n\ttimeStep = 1 / this.iters;\r\n\r\n\tmouse = new Vec(0, 0);\r\n\tisMouseDown = false;\r\n\r\n\twidth: number;\r\n\theight: number;\r\n\r\n\tconstructor(width: number, height: number) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tdocument.body.addEventListener('mousemove', e => {\r\n\t\t\tthis.mouse.set(e.clientX, e.clientY);\r\n\t\t});\r\n\t\tdocument.body.addEventListener('mousedown', () => {\r\n\t\t\tthis.isMouseDown = true;\r\n\t\t});\r\n\t\tdocument.body.addEventListener('mouseup', () => {\r\n\t\t\tthis.isMouseDown = false;\r\n\t\t});\r\n\t}\r\n\r\n\taddParticle(p: Particle) {\r\n\t\tif (this.particles.indexOf(p) > -1) return;\r\n\t\tthis.particles.push(p);\r\n\t}\r\n\r\n\tupdateParticles() {\r\n\t\t// all accelerations first\r\n\t\tfor (let p of this.particles) {\r\n\t\t\tif (p.isLocked) continue;\r\n\r\n\t\t\t// physics properties\r\n\t\t\tif (this.hasGravity) {\r\n\t\t\t\tp.addForce(this.gravity);\r\n\t\t\t}\r\n\r\n\t\t\t// if (this.hasWind) {\r\n\t\t\t// \tp.addForce(this.wind);\r\n\t\t\t// }\r\n\r\n\t\t\tif (this.hasFriction) {\r\n\t\t\t\tlet friction = p.getVelocity().scale(-this.frictionCoefficient);\r\n\t\t\t\tp.addForce(friction);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hasDrag) {\r\n\t\t\t\tconst vel = p.getVelocity();\r\n\t\t\t\tlet drag = vel.normalizeTo(-this.dragCoefficient * vel.magSq());\r\n\t\t\t\tp.addForce(drag);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hasRepulsion) {\r\n\t\t\t\tconst rrSq = this.repulsionRadius * this.repulsionRadius;\r\n\t\t\t\tfor (let other of this.particles) {\r\n\t\t\t\t\tif (other === p) continue;\r\n\r\n\t\t\t\t\tlet dir = p.sub(other);\r\n\t\t\t\t\tlet distSq = dir.magSq();\r\n\t\t\t\t\tif (distSq < rrSq && distSq > 0) {\r\n\t\t\t\t\t\tdir.normalizeToSelf(this.repulsionStrength / distSq);\r\n\t\t\t\t\t\tp.addForce(dir);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tthis.hasMouseInteraction &&\r\n\t\t\t\tthis.heldParticleIndex === null &&\r\n\t\t\t\tthis.isMouseDown\r\n\t\t\t\t// && p.isHovered()\r\n\t\t\t) {\r\n\t\t\t\tthis.heldParticleIndex = this.particles.indexOf(p);\r\n\t\t\t}\r\n\r\n\t\t\t// // particle properties\r\n\t\t\t// if (p.hasLifespan) {\r\n\t\t\t// \tp.lifespan -= 1;\r\n\t\t\t// \tif (p.lifespan <= 0) {\r\n\t\t\t// \t\tthis.particles.splice(this.particles.indexOf(p), 1);\r\n\t\t\t// \t\tcontinue;\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\r\n\t\t\t// if (p.hasTrail) {\r\n\t\t\t// \tp.trail.push(p.copy());\r\n\t\t\t// \tif (p.trail.length > p.trailLength) {\r\n\t\t\t// \t\tp.trail.shift();\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\r\n\t\t\tif (p.springs !== null) {\r\n\t\t\t\tfor (let s of p.springs) {\r\n\t\t\t\t\ts.apply();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now change positions based on accelerations\r\n\t\tfor (let p of this.particles) {\r\n\t\t\tif (p.isLocked) continue;\r\n\r\n\t\t\tp.force.scaleSelf(this.timeStep);\r\n\r\n\t\t\tif (this.hasDamping) {\r\n\t\t\t\tp.dampen(this.damping);\r\n\t\t\t}\r\n\r\n\t\t\tp.update();\r\n\r\n\t\t\tif (this.hasBounce) {\r\n\t\t\t\tif (p.x < p.radius) {\r\n\t\t\t\t\tp.x = p.radius;\r\n\t\t\t\t\tconst vel = p.getVelocity();\r\n\t\t\t\t\tp.setVelocity(\r\n\t\t\t\t\t\tnew Vec(vel.x * -this.bounceCoefficient, vel.y)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (p.x >= this.width - p.radius) {\r\n\t\t\t\t\tp.x = this.width - p.radius;\r\n\t\t\t\t\tconst vel = p.getVelocity();\r\n\t\t\t\t\tp.setVelocity(\r\n\t\t\t\t\t\tnew Vec(vel.x * -this.bounceCoefficient, vel.y)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (p.y < p.radius) {\r\n\t\t\t\t\tp.y = p.radius;\r\n\t\t\t\t\tconst vel = p.getVelocity();\r\n\t\t\t\t\tp.setVelocity(\r\n\t\t\t\t\t\tnew Vec(vel.x, vel.y * -this.bounceCoefficient)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (p.y >= this.height - p.radius) {\r\n\t\t\t\t\tp.y = this.height - p.radius;\r\n\t\t\t\t\tconst vel = p.getVelocity();\r\n\t\t\t\t\tp.setVelocity(\r\n\t\t\t\t\t\tnew Vec(vel.x, vel.y * -this.bounceCoefficient)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tthis.hasMouseInteraction &&\r\n\t\t\tthis.heldParticleIndex !== null &&\r\n\t\t\tthis.isMouseDown\r\n\t\t) {\r\n\t\t\tconst pHeld = this.particles[this.heldParticleIndex];\r\n\t\t\tpHeld?.set(this.mouse);\r\n\t\t\tpHeld?.clearVelocity();\r\n\t\t}\r\n\t}\r\n\r\n\tgetSprings() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tfor (let i = 0; i < this.iters; i++) {\r\n\t\t\tthis.updateParticles();\r\n\t\t}\r\n\t}\r\n}\r\n","import type { Particle } from './Particle';\r\n\r\nexport class Spring {\r\n\ta: Particle;\r\n\tb: Particle;\r\n\trestLength: number;\r\n\tk: number; // Spring constant\r\n\r\n\tdamping: number = 0.05;\r\n\r\n\tstatic epsilon: number = 1e-2;\r\n\r\n\tconstructor(a: Particle, b: Particle, restLength: number, k: number) {\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.restLength = restLength === null ? a.distanceTo(b) : restLength;\r\n\t\tthis.k = k;\r\n\r\n\t\ta.addSpring(this);\r\n\t\tb.addSpring(this);\r\n\t}\r\n\r\n\tapply() {\r\n\t\tconst diff = this.b.sub(this.a);\r\n\t\tconst dx = diff.mag() - this.restLength;\r\n\t\tif (Math.abs(dx) > Spring.epsilon) {\r\n\t\t\tconst force = diff.normalizeTo(this.k * -dx);\r\n\t\t\tthis.a.addForce(force.scale(-0.5));\r\n\t\t\tthis.b.addForce(force.scale(+0.5));\r\n\t\t}\r\n\t}\r\n\r\n\t// draw() {\r\n\t// \tconst n = Math.floor(this.b.distanceTo(this.a) * 0.2);\r\n\t// \tconst delta = this.b.sub(this.a).div(n);\r\n\t// \tconst deltaPerp = delta.perp();\r\n\t// \tconst zig = delta.rotate(Math.PI / 4).scale(Math.SQRT2 / 2);\r\n\t// \tbeginShape();\r\n\t// \tvertex(this.a.x, this.a.y);\r\n\t// \tfor (let i = 1; i <= n; i++) {\r\n\t// \t\tconst zigPos = this.a\r\n\t// \t\t\t.add(delta.scale(i - 0.5))\r\n\t// \t\t\t.add(deltaPerp.scale(i % 2 === 0 ? 1 : -1));\r\n\t// \t\tconst nextPos = this.a.add(delta.scale(i));\r\n\t// \t\tvertex(zigPos.x, zigPos.y);\r\n\t// \t\tvertex(nextPos.x, nextPos.y);\r\n\t// \t}\r\n\t// \tendShape();\r\n\t// \t// line(this.a.x, this.a.y, this.b.x, this.b.y);\r\n\t// }\r\n}\r\n","import type { Vec } from '../geom/Vec';\r\nimport { PhysicsEngine, Spring, Particle } from './index';\r\n\r\nexport class SpringChain {\r\n\tparticles: Particle[];\r\n\r\n\tconstructor(\r\n\t\tphysics: PhysicsEngine,\r\n\t\tfirstParticle: Particle,\r\n\t\tdir: Vec,\r\n\t\tlength: number,\r\n\t\tsegmentCount: number,\r\n\t\tk: number\r\n\t) {\r\n\t\tthis.particles = [firstParticle];\r\n\t\tconst segmentLength = length / segmentCount;\r\n\t\tconst segmentVector = dir.scale(segmentLength);\r\n\r\n\t\tlet lastParticle = firstParticle;\r\n\t\tphysics.addParticle(firstParticle);\r\n\t\tfor (let i = 0; i < segmentCount; i++) {\r\n\t\t\tlet p = new Particle(lastParticle.add(segmentVector));\r\n\t\t\tthis.particles.push(p);\r\n\t\t\tphysics.addParticle(p);\r\n\t\t\tlastParticle = p;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.particles.length - 1; i++) {\r\n\t\t\tlet pi = this.particles[i] as Particle;\r\n\t\t\tlet pn = this.particles[i + 1] as Particle;\r\n\t\t\tnew Spring(pi, pn, segmentLength, k);\r\n\t\t}\r\n\t}\r\n\r\n\t// draw() {\r\n\t// \tbeginShape();\r\n\t// \tfor (let p of this.particles) {\r\n\t// \t\tvertex(p.x, p.y);\r\n\t// \t}\r\n\t// \tendShape();\r\n\t// }\r\n}\r\n","import p5 from 'p5';\r\nimport { Particle } from '../physics/Particle';\r\nimport { Spring } from '../physics/Spring';\r\nimport { Vec } from '../geom/Vec';\r\n\r\nexport class GFX {\r\n\tprivate sketch: p5;\r\n\tprivate defaultStrokeWeight: number = 1;\r\n\tprivate defaultParticleSize: number = 5;\r\n\r\n\tconstructor(sketch: p5) {\r\n\t\tthis.sketch = sketch;\r\n\t}\r\n\r\n\t// Configuration\r\n\tsetDefaultParticleSize(size: number): void {\r\n\t\tthis.defaultParticleSize = size;\r\n\t}\r\n\r\n\tsetDefaultStrokeWeight(weight: number): void {\r\n\t\tthis.defaultStrokeWeight = weight;\r\n\t}\r\n\r\n\t// Utility methods\r\n\tpush(): void {\r\n\t\tthis.sketch.push();\r\n\t}\r\n\r\n\tpop(): void {\r\n\t\tthis.sketch.pop();\r\n\t}\r\n\r\n\ttranslate(x: number, y: number): void {\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.translate(x, y);\r\n\t}\r\n\r\n\trotate(angle: number): void {\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.rotate(angle);\r\n\t}\r\n\r\n\tscale(s: number): void;\r\n\tscale(x: number, y: number): void;\r\n\tscale(x: number, y?: number): void {\r\n\t\tif (y === undefined) {\r\n\t\t\tthis.sketch.scale(x);\r\n\t\t} else {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.scale(x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t// Physics rendering\r\n\tparticle(p: Particle, size?: number): void {\r\n\t\tconst s = size ?? this.defaultParticleSize;\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.circle(p.position.x, p.position.y, s);\r\n\t}\r\n\r\n\tparticles(particles: Particle[], size?: number): void {\r\n\t\tparticles.forEach(p => this.particle(p, size));\r\n\t}\r\n\r\n\tspring(s: Spring, showRestLength: boolean = false): void {\r\n\t\tthis.sketch.line(\r\n\t\t\t// @ts-ignore\r\n\t\t\ts.a.position.x,\r\n\t\t\t// @ts-ignore\r\n\t\t\ts.a.position.y,\r\n\t\t\t// @ts-ignore\r\n\t\t\ts.b.position.x,\r\n\t\t\t// @ts-ignore\r\n\t\t\ts.b.position.y\r\n\t\t);\r\n\r\n\t\tif (showRestLength) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst mid = s.a.position.copy().add(s.b.position).scale(0.5);\r\n\t\t\tconst angle = Math.atan2(\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\ts.b.position.y - s.a.position.y,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\ts.b.position.x - s.a.position.x\r\n\t\t\t);\r\n\t\t\tthis.sketch.push();\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.translate(mid.x, mid.y);\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.rotate(angle);\r\n\t\t\tthis.sketch.strokeWeight(0.5);\r\n\t\t\tthis.sketch.stroke(255, 0, 0, 100);\r\n\t\t\tthis.sketch.line(-s.restLength / 2, 0, s.restLength / 2, 0);\r\n\t\t\tthis.sketch.pop();\r\n\t\t}\r\n\t}\r\n\r\n\tsprings(springs: Spring[], showRestLength: boolean = false): void {\r\n\t\tsprings.forEach(s => this.spring(s, showRestLength));\r\n\t}\r\n\r\n\t// Vector drawing\r\n\tvector(\r\n\t\torigin: Vec,\r\n\t\tvec: Vec,\r\n\t\tscale: number = 1,\r\n\t\tarrowSize: number = 5\r\n\t): void {\r\n\t\tconst end = origin.copy().add(vec.copy().scale(scale));\r\n\t\tthis.arrow(origin, end, arrowSize);\r\n\t}\r\n\r\n\tarrow(from: Vec, to: Vec, arrowSize: number = 5): void {\r\n\t\tthis.sketch.line(from.x, from.y, to.x, to.y);\r\n\r\n\t\tconst angle = Math.atan2(to.y - from.y, to.x - from.x);\r\n\t\tthis.sketch.push();\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.translate(to.x, to.y);\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.rotate(angle);\r\n\t\tthis.sketch.line(0, 0, -arrowSize, -arrowSize / 2);\r\n\t\tthis.sketch.line(0, 0, -arrowSize, arrowSize / 2);\r\n\t\tthis.sketch.pop();\r\n\t}\r\n\r\n\t// Basic shapes\r\n\tline(v1: Vec, v2: Vec): void;\r\n\tline(x1: number, y1: number, x2: number, y2: number): void;\r\n\tline(a: Vec | number, b: Vec | number, c?: number, d?: number): void {\r\n\t\tif (a instanceof Vec && b instanceof Vec) {\r\n\t\t\tthis.sketch.line(a.x, a.y, b.x, b.y);\r\n\t\t} else if (\r\n\t\t\ttypeof a === 'number' &&\r\n\t\t\ttypeof b === 'number' &&\r\n\t\t\tc !== undefined &&\r\n\t\t\td !== undefined\r\n\t\t) {\r\n\t\t\tthis.sketch.line(a, b, c, d);\r\n\t\t}\r\n\t}\r\n\r\n\tcircle(center: Vec, radius: number): void;\r\n\tcircle(x: number, y: number, radius: number): void;\r\n\tcircle(a: Vec | number, b: number, c?: number): void {\r\n\t\tif (a instanceof Vec) {\r\n\t\t\tthis.sketch.circle(a.x, a.y, b * 2);\r\n\t\t} else if (typeof a === 'number' && c !== undefined) {\r\n\t\t\tthis.sketch.circle(a, b, c * 2);\r\n\t\t}\r\n\t}\r\n\r\n\tellipse(center: Vec, width: number, height: number): void;\r\n\tellipse(x: number, y: number, width: number, height: number): void;\r\n\tellipse(a: Vec | number, b: number, c: number, d?: number): void {\r\n\t\tif (a instanceof Vec) {\r\n\t\t\tthis.sketch.ellipse(a.x, a.y, b, c);\r\n\t\t} else if (typeof a === 'number' && d !== undefined) {\r\n\t\t\tthis.sketch.ellipse(a, b, c, d);\r\n\t\t}\r\n\t}\r\n\r\n\trect(topLeft: Vec, width: number, height: number): void;\r\n\trect(x: number, y: number, width: number, height: number): void;\r\n\trect(a: Vec | number, b: number, c: number, d?: number): void {\r\n\t\tif (a instanceof Vec) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.rect(a.x, a.y, b, c);\r\n\t\t} else if (typeof a === 'number' && d !== undefined) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.rect(a, b, c, d);\r\n\t\t}\r\n\t}\r\n\r\n\tpoint(v: Vec): void;\r\n\tpoint(x: number, y: number): void;\r\n\tpoint(a: Vec | number, b?: number): void {\r\n\t\tif (a instanceof Vec) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.point(a.x, a.y);\r\n\t\t} else if (typeof a === 'number' && b !== undefined) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.point(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t// Polygon drawing\r\n\tpolygon(vertices: Vec[]): void {\r\n\t\tif (vertices.length < 3) return;\r\n\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.beginShape();\r\n\t\tvertices.forEach(v => this.sketch.vertex(v.x, v.y));\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.endShape(this.sketch.CLOSE);\r\n\t}\r\n\r\n\tpolyline(vertices: Vec[]): void {\r\n\t\tif (vertices.length < 2) return;\r\n\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.beginShape();\r\n\t\tvertices.forEach(v => this.sketch.vertex(v.x, v.y));\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.endShape();\r\n\t}\r\n\r\n\t// Curves\r\n\tcurve(points: Vec[], tension: number = 0): void {\r\n\t\tif (points.length < 4) return;\r\n\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.curveTightness(tension);\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.beginShape();\r\n\t\t// @ts-ignore\r\n\t\tpoints.forEach(p => this.sketch.curveVertex(p.x, p.y));\r\n\t\t// @ts-ignore\r\n\t\tthis.sketch.endShape();\r\n\t}\r\n\r\n\tbezier(p0: Vec, p1: Vec, p2: Vec, p3: Vec): void {\r\n\t\tthis.sketch.bezier(p0.x, p0.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n\t}\r\n\r\n\t// Grid and guides\r\n\tgrid(\r\n\t\tspacing: number,\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\toffsetX: number = 0,\r\n\t\toffsetY: number = 0\r\n\t): void {\r\n\t\tthis.sketch.push();\r\n\t\tthis.sketch.strokeWeight(0.5);\r\n\r\n\t\t// Vertical lines\r\n\t\tfor (let x = offsetX % spacing; x < width; x += spacing) {\r\n\t\t\tthis.sketch.line(x, 0, x, height);\r\n\t\t}\r\n\r\n\t\t// Horizontal lines\r\n\t\tfor (let y = offsetY % spacing; y < height; y += spacing) {\r\n\t\t\tthis.sketch.line(0, y, width, y);\r\n\t\t}\r\n\r\n\t\tthis.sketch.pop();\r\n\t}\r\n\r\n\tcrosshair(center: Vec, size: number = 10): void {\r\n\t\tthis.sketch.line(center.x - size, center.y, center.x + size, center.y);\r\n\t\tthis.sketch.line(center.x, center.y - size, center.x, center.y + size);\r\n\t}\r\n\r\n\t// Text helpers\r\n\ttext(\r\n\t\tstr: string,\r\n\t\tpos: Vec,\r\n\t\talign?: {\r\n\t\t\thorizontal?: 'left' | 'center' | 'right';\r\n\t\t\tvertical?: 'top' | 'center' | 'bottom';\r\n\t\t}\r\n\t): void {\r\n\t\tif (align) {\r\n\t\t\tthis.sketch.push();\r\n\t\t\tif (align.horizontal === 'center')\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.sketch.textAlign(this.sketch.CENTER, this.sketch.CENTER);\r\n\t\t\telse if (align.horizontal === 'right')\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.sketch.textAlign(this.sketch.RIGHT);\r\n\t\t\telse if (align.vertical === 'center')\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.sketch.textAlign(this.sketch.LEFT, this.sketch.CENTER);\r\n\t\t\telse if (align.vertical === 'top')\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.sketch.textAlign(this.sketch.LEFT, this.sketch.TOP);\r\n\t\t\telse if (align.vertical === 'bottom')\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tthis.sketch.textAlign(this.sketch.LEFT, this.sketch.BOTTOM);\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.text(str, pos.x, pos.y);\r\n\t\t\tthis.sketch.pop();\r\n\t\t} else {\r\n\t\t\t// @ts-ignore\r\n\t\t\tthis.sketch.text(str, pos.x, pos.y);\r\n\t\t}\r\n\t}\r\n}\r\n"]}